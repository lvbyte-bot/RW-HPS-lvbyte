name: 构建并发布Docker镜像

on:
  push:
    branches: [ "master", "main" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: 设置Gradle权限
        run: chmod +x gradlew

      - name: 编译项目
        run: ./gradlew jar

      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: Server-All
          path: ./Server-All/build/libs/*.jar

      - name: 登录到容器注册表
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取元数据（标签、标签）用于Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            latest

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 构建并推送Docker镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
